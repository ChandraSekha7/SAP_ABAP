REPORT ZINF_UPDATE_NONEDITABLE.


TABLES: zinf_material, zinf_groups, zinf_type.

TYPES: BEGIN OF ty_result,
         material_number      TYPE zinf_material-material_number,
         material_description TYPE zinf_material-material_description,
         material_group       TYPE zinf_material-material_group,
         material_type        TYPE zinf_material-material_type,
         created_date         TYPE zinf_material-created_date,
         created_time         TYPE zinf_material-created_time,
         group_description    TYPE zinf_groups-description,
         type_description     TYPE zinf_type-description,
       END OF ty_result.

DATA: lt_result TYPE TABLE OF ty_result,
      wa_result TYPE ty_result,
      gt_result TYPE TABLE OF ty_result,
      lt_changes TYPE TABLE OF ty_result.

DATA: it_alv_design TYPE slis_t_fieldcat_alv,
      wa_alv_design TYPE slis_fieldcat_alv,
      wa_alv_layout TYPE slis_layout_alv,
      lt_sort_info  TYPE slis_t_sortinfo_alv.

START-OF-SELECTION.
  PERFORM f_fetch_data.
  PERFORM f_build_field_catalog.
  PERFORM f_build_layout.
  PERFORM f_display_alv_report.

* Subroutine to fetch data from ZINF_MATERIAL, ZINF_GROUPS, and ZINF_TYPE
FORM f_fetch_data.
  SELECT m~material_number,
         m~material_description,
         m~material_group,
         m~material_type,
         m~created_date,
         m~created_time,
         g~description AS group_description,
         t~description AS type_description
    INTO CORRESPONDING FIELDS OF TABLE @lt_result
    FROM zinf_material AS m
    INNER JOIN zinf_groups AS g ON m~material_group = g~material_type
    INNER JOIN zinf_type AS t ON m~material_type = t~material_type.

    APPEND LINES OF lt_result to gt_result[].
ENDFORM.

* Subroutine to build field catalog
FORM f_build_field_catalog.
  CLEAR it_alv_design.

  " Add field catalog entries here based on your requirements
  APPEND VALUE #( fieldname = 'MATERIAL_NUMBER' seltext_m = 'Material Number' outputlen = 20 ) TO it_alv_design.
  APPEND VALUE #( fieldname = 'MATERIAL_DESCRIPTION' seltext_m = 'Material Description' outputlen = 40 ) TO it_alv_design.

  " Attach zinf_groups to MATERIAL_GROUP for F4 help
  APPEND VALUE #( fieldname = 'MATERIAL_GROUP' outputlen = 25 ref_tabname = 'ZINF_GROUPS' ref_fieldname = 'MATERIAL_TYPE' edit = 'X' ) TO it_alv_design.

  " Attach zinf_type to MATERIAL_TYPE for F4 help
  APPEND VALUE #( fieldname = 'MATERIAL_TYPE' outputlen = 25 ref_tabname = 'ZINF_TYPE' ref_fieldname = 'MATERIAL_TYPE' edit = 'X' ) TO it_alv_design.

  APPEND VALUE #( fieldname = 'CREATED_DATE' seltext_m = 'Created Date' outputlen = 25 ) TO it_alv_design.
  APPEND VALUE #( fieldname = 'CREATED_TIME' seltext_m = 'Created Time' outputlen = 25 ) TO it_alv_design.
  APPEND VALUE #( fieldname = 'GROUP_DESCRIPTION' tabname = 'LT_RESULT' outputlen = '40' seltext_m = 'Group Description' ) TO it_alv_design.
  APPEND VALUE #( fieldname = 'TYPE_DESCRIPTION' tabname = 'LT_RESULT' outputlen = '50' seltext_m = 'Type Description' ) TO it_alv_design.
ENDFORM.

* Subroutine to build layout
FORM f_build_layout.
  CLEAR wa_alv_layout.
  wa_alv_layout-zebra = 'X'.
*  wa_alv_layout-coltab_fieldname = 'CELLCOLOR'.
ENDFORM.

* Subroutine to display ALV report
FORM f_display_alv_report.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'PF_STATUS_SET'
      i_callback_user_command  = 'USER_COMMAND'
      it_fieldcat              = it_alv_design
      is_layout                = wa_alv_layout
*      it_sort                  = lt_sort_info
    TABLES
      t_outtab                 = lt_result.
ENDFORM.

* Event handler for user command
FORM user_command USING p_ucomm LIKE sy-ucomm p_selfield TYPE slis_selfield.
  CASE p_ucomm.
    WHEN '&DATA_SAVE'.
      PERFORM f_save_data.
*      PERFORM f_display_alv_report.
  ENDCASE.
ENDFORM.

* PF status set subroutine
FORM pf_status_set USING extab TYPE slis_t_extab.
  SET PF-STATUS 'STANDARD'.
ENDFORM.

* Subroutine to save data
FORM f_save_data.
DATA:lt_update type table of Zinf_material,
      ls_update TYPE Zinf_material.


  LOOP AT lt_result INTO wa_result.
    READ TABLE gt_result WITH KEY
        material_number = wa_result-material_number
        material_group = wa_result-material_group
        material_type  = wa_result-material_type
        TRANSPORTING NO FIELDS.

    IF sy-subrc <> 0.
*      APPEND wa_result TO lt_changes.

      MOVE-CORRESPONDING wa_result to ls_update.
      APPEND ls_update to lt_update.
      CLEAR ls_update.
    ENDIF.
  ENDLOOP.

  " Modify zinf_material using all entries from lt_changes
  MODIFY zinf_material FROM TABLE lt_update.

  " Clear lt_changes after modifying zinf_material
*  CLEAR lt_changes[].

  " Commit the changes to the database
  COMMIT WORK.


ENDFORM.
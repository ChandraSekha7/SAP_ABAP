REPORT zinf_data_save.
TYPE-POOLS: slis.

TABLES: zinf_material, zinf_groups, zinf_type.

DATA: lt_result      TYPE TABLE OF zinf_material,
      wa_result      TYPE zinf_material,
      lt_fieldcat    TYPE slis_t_fieldcat_alv,
      lo_alv         TYPE REF TO cl_gui_alv_grid,
      wa_alv_layout  TYPE slis_layout_alv.

START-OF-SELECTION.
  " Fetch all records
  PERFORM f_fetch_all_material_data.

  " Display the ALV report
  PERFORM f_display_alv_report.

FORM f_fetch_all_material_data.
  CLEAR lt_result.
  SELECT * FROM zinf_material INTO TABLE lt_result.
ENDFORM.

FORM f_display_alv_report.
  " Check if data is fetched
  IF lt_result IS NOT INITIAL.
    " Build field catalog
    PERFORM f_build_field_catalog.

    " Build layout
    PERFORM f_build_layout.

    " Display ALV Grid
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
        i_callback_program       = sy-repid
        i_callback_pf_status_set = 'PF_STATUS_SET'
        it_fieldcat              = lt_fieldcat
        is_layout                = wa_alv_layout
        i_default                = 'X'   " Enables editing
      TABLES
        t_outtab                 = lt_result.

  ELSE.
    WRITE: / 'No data found.'.
  ENDIF.
ENDFORM.

FORM pf_status_set USING extab TYPE slis_t_extab.
  SET PF-STATUS 'STANDARD'.
ENDFORM.

FORM f_save_data.
  DATA: wa_resultcp   TYPE   zinf_material,
        wa_result_tmp TYPE zinf_material,
        lt_changes    TYPE TABLE OF zinf_material.
  CLEAR lt_changes[].
  LOOP AT lt_result INTO wa_result.
    READ TABLE  lt_result INTO  wa_resultcp INDEX sy-tabix.
    IF  wa_resultcp NE  wa_result.
      APPEND  wa_result TO lt_changes.
      MOVE-CORRESPONDING  wa_result TO wa_result_tmp.
      MODIFY zinf_material FROM  wa_result_tmp.
    ENDIF.

    CLEAR  wa_resultcp.
  ENDLOOP.
ENDFORM.

FORM user_command USING p_ucomm TYPE sy-ucomm.
  CASE p_ucomm.
    WHEN '&DATA_SAVE'.
      PERFORM f_save_data.
  ENDCASE.
ENDFORM.

FORM f_build_field_catalog.
  CLEAR lt_fieldcat.

  " Add field catalog entries here based on your requirements
  APPEND VALUE #( fieldname = 'MATERIAL_NUMBER' seltext_m = 'Material Number' outputlen = 20 ) TO lt_fieldcat.
  APPEND VALUE #( fieldname = 'MATERIAL_DESCRIPTION' seltext_m = 'Material Description' outputlen = 40 ) TO lt_fieldcat.

  " Attach zinf_groups to MATERIAL_GROUP for F4 help
  APPEND VALUE #( fieldname = 'MATERIAL_GROUP' outputlen = 25 edit = 'X' input = 'X'
               ref_tabname = 'ZINF_GROUPS' ref_fieldname = 'MATERIAL_TYPE' ) TO lt_fieldcat.

  " Attach zinf_type to MATERIAL_TYPE for F4 help
  APPEND VALUE #( fieldname = 'MATERIAL_TYPE' outputlen = 25 edit = 'X' input = 'X'
              ref_tabname = 'ZINF_TYPE' ref_fieldname = 'MATERIAL_TYPE' ) TO lt_fieldcat.

  APPEND VALUE #( fieldname = 'CREATED_DATE' seltext_m = 'Created Date' outputlen = 25 ) TO lt_fieldcat.
  APPEND VALUE #( fieldname = 'CREATED_TIME' seltext_m = 'Created Time' outputlen = 25 ) TO lt_fieldcat.

  APPEND VALUE #( fieldname = 'GROUP_DESCRIPTION' tabname = 'LT_RESULT' outputlen = '40' seltext_m = 'Group Description'  ref_tabname = 'ZINF_GROUPS' ref_fieldname = 'DESCRIPTION') TO lt_fieldcat.
  APPEND VALUE #( fieldname = 'TYPE_DESCRIPTION' tabname = 'LT_RESULT' outputlen = '50' seltext_m = 'Type Description' ref_tabname = 'ZINF_TYPE' ref_fieldname = 'DESCRIPTION') TO lt_fieldcat.
ENDFORM.

FORM f_build_layout.
  CLEAR wa_alv_layout.
  " Define layout settings based on your requirements
  wa_alv_layout-zebra = 'X'.
ENDFORM.